@model GuardaCapitaldaCultura2027.Models.ViewModels.Eventos

@{ ViewData["Title"] = "Index"; }

<fieldset class="border p-4">
    <legend class="w-auto text-left">Eventos - Index</legend>
    <form id="pesquisaform" asp-action="Index">
        <div style="min-width:100%">
            <a asp-action="Index" asp-controller="Eventos" class="btn btn-primary" style="margin-left:15px">Lista de Eventos</a>

            @{
                string pesquisa = "";
                try
                {
                    pesquisa = string.IsNullOrEmpty(Context.Request.Form["pesquisa"]) ? string.Empty : Context.Request.Form["pesquisa"].ToString();

                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message);
                }
                finally
                {
                    if (string.IsNullOrEmpty(pesquisa))
                    {
                        pesquisa = ViewData["Pesquisa"] as string;
                    }
                }
                <input type="pesquisa" id="pesquisabox" autofocus oninput="this.form.submit();" onfocus="this.value = '@(pesquisa)'" onchange="this.form.submit()" name="pesquisa" style="position:absolute;right:0; margin-right:50px; border: 2px solid #167ce9;font-size: 1.2em;text-align: center;outline:none !important;border-radius: 20px;background-color:transparent;" />
                <div style="display:none">
                    @ViewData["Pesquisa"] = pesquisa;
                </div>
            }
            <input type="submit" class="icon-pesquisa fa-7x" value="&#xf002;" style="font-family: FontAwesome;height:35px;width:35px; position:absolute;right:0;background-color:transparent;margin-right:5px;margin-top:1px; border: 2px solid #167ce9;font-size: 1.2em;text-align: center;border-radius: 20px;outline:none !important" />
        </div>
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Municipio.Nome)
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Descricao)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Data_realizacao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Lotacao_max)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ListaEventos.Where(evt=>evt.EventoId.ToString().ToLower().Equals(ViewData["Pesquisa"].ToString().ToLower()) ||
             evt.Name.ToLower().Equals(ViewData["Pesquisa"].ToString().ToLower()) ||
             evt.Municipio.Nome.ToLower().Equals(ViewData["Pesquisa"].ToString().ToLower()) ||
             evt.Lotacao_max.ToString().ToLower().Equals(ViewData["Pesquisa"].ToString().ToLower()) ||
             evt.Descricao.ToLower().Equals(ViewData["Pesquisa"].ToString().ToLower()) ||
             evt.Data_realizacao.ToString().ToLower().Equals(ViewData["Pesquisa"].ToString().ToLower())).ToList())
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Municipio.Nome)
                    </td>
                    @*<td style="max-width:200px;">
                        @Html.DisplayFor(modelItem => item.Descricao)
                    </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Data_realizacao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lotacao_max)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.EventoId" class="btn btn-secondary" style="background-color:goldenrod;border-color:goldenrod;">Edit</a> | <a asp-action="Details" asp-route-id="@item.EventoId" class="btn btn-info">Details</a> | <a asp-action="Delete" asp-route-id="@item.EventoId" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
}
        </tbody>
    </table>
</fieldset>
<br />
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<div>
    @{ if (Model.Paginacao.PaginaAtual > 1 && Model.Paginacao.PaginaAtual != 2)
        {
            <a title="First Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual > 1) ? 1 : Model.Paginacao.PaginaAtual})"><span class="icon-prev"><i style="color:black" class="fas fa-angle-double-left"></i></span></a>
            <span>&nbsp;</span>
            <a title="Previous Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual > 1) ? Model.Paginacao.PaginaAtual-1 : Model.Paginacao.PaginaAtual })"><span class="icon-prev"><i style="color:black" class="fas fa-angle-left"></i></span></a>
            <span>&nbsp;</span> }
        else if (Model.Paginacao.PaginaAtual > 1 && Model.Paginacao.PaginaAtual == 2)
        {
            <a title="Previous Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual > 1) ? Model.Paginacao.PaginaAtual-1 : Model.Paginacao.PaginaAtual })"><span class="icon-prev"><i style="color:black" class="fas fa-angle-left"></i></span></a>
            <span>&nbsp;</span> }

        if (Model.Paginacao.PaginaAtual > 2)
        {
            @Html.ActionLink((Model.Paginacao.PaginaAtual - 1).ToString(), "Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual - 1) }, new { @style = "font-family: 'Varela Round';color:black;font-weight:bolder;" })
            <span>&nbsp;</span> }

        <span style="font-family: 'Varela Round';color:#167ce9;font-weight:bolder;">@Model.Paginacao.PaginaAtual.ToString()</span>
        <span>&nbsp;</span> if (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas - 1)
        {
            @Html.ActionLink((Model.Paginacao.PaginaAtual + 1).ToString(), "Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual + 1) }, new { @style = "font-family: 'Varela Round';color:black;font-weight:bolder;" })
            <span>&nbsp;</span> }

        if (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas && Model.Paginacao.PaginaAtual + 1 < Model.Paginacao.TotalPaginas)
        {
            <a title="Next Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas) ? Model.Paginacao.PaginaAtual + 1 : Model.Paginacao.PaginaAtual })"><span class="icon-next"><i style="color:black" class="fas fa-angle-right"></i></span></a>
            <span>&nbsp;&nbsp;</span>
            <a title="Last Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas) ? Model.Paginacao.TotalPaginas : Model.Paginacao.PaginaAtual })"><span class="icon-next"><i style="color:black" class="fas fa-angle-double-right"></i></span></a>
            <span>&nbsp;&nbsp;</span> }
        else if (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas && Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas)
        {
            <a title="Next Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas) ? Model.Paginacao.PaginaAtual + 1 : Model.Paginacao.PaginaAtual })"><span class="icon-next"><i style="color:black" class="fas fa-angle-right"></i></span></a>
            <span>&nbsp;&nbsp;</span> } }
</div>