@model GuardaCapitaldaCultura2027.Models.ViewModels.Eventos

@{ ViewData["Title"] = "Index"; }


<div class="row">
    <h4 class="alert-light">Lista dos Eventos</h4>
    <hr />
</div>
<div class="row">
    <p>
        <a class="btn btn-primary left" asp-action="Create">Criar Eventos</a>
    </p>
</div>

<fieldset class="border p-4">
    <legend class="w-auto text-left"></legend>
    <form id="pesquisaform" class="input-group md-form form-sm form-1 pl-0 mb-4" asp-action="Index">
        @{
            string pesquisa = "";
            try
            {
                pesquisa = string.IsNullOrEmpty(Context.Request.Form["pesquisa"]) ? string.Empty : Context.Request.Form["pesquisa"].ToString();

            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            finally
            {
                if (string.IsNullOrEmpty(pesquisa))
                {
                    pesquisa = ViewData["pesquisa"] as string;
                }
            }
            <div class="input-group-prepend">
                <span class="input-group-text purple lighten-3" id="basic-text1">
                    <i class="fas fa-search text-white"
                       aria-hidden="true"></i>
                </span>
            </div>
            <input type="search" placeholder="Pesquise" id="pesquisabox" autofocus oninput="this.form.submit();" onfocus="this.value = '@(pesquisa)'" onchange="this.form.submit()" name="pesquisa" class="form-control" />
            <div class="ml-3">
                <input type="submit" value="Pesquisar" class="btn btn-primary mr-4" />
                <a asp-action="Index" class="btn btn-secondary ml-1">Limpar Pesquisa</a>
            </div>
            ViewData["pesquisa"] = pesquisa;
        }
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Municipio.Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Data_realizacao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ListaEventos.FirstOrDefault().Lotacao_max)
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ListaEventos.Where(evt =>
          {
              return (!string.IsNullOrWhiteSpace(ViewData["pesquisa"]?.ToString())) ?
              (evt.EventoId.ToString().ToLower().Contains(ViewData["pesquisa"]?.ToString().ToLower()) ||
              evt.Name.ToLower().Contains(ViewData["pesquisa"]?.ToString().ToLower()) ||
              evt.Municipio.Nome.ToLower().Contains(ViewData["pesquisa"]?.ToString().ToLower()) ||
              evt.Lotacao_max.ToString().ToLower().Contains(ViewData["pesquisa"]?.ToString().ToLower()) ||
              evt.Descricao.ToLower().Contains(ViewData["pesquisa"]?.ToString().ToLower()) ||
              evt.Data_realizacao.ToString().ToLower().Contains(ViewData["pesquisa"]?.ToString().ToLower())) : true;
          }).ToList())
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Municipio.Nome)
                    </td>
                    @*<td style="max-width:200px;">
                            @Html.DisplayFor(modelItem => item.Descricao)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Data_realizacao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lotacao_max)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.EventoId" class="btn btn-warning mr-4">Edit</a><a asp-action="Details" asp-route-id="@item.EventoId" class="btn btn-info mr-4">Details</a><a asp-action="Delete" asp-route-id="@item.EventoId" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</fieldset>
<br />

<div>
    @{
        <a title="First Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual > 1) ? 1 : Model.Paginacao.PaginaAtual})"><span class="page-link"><i style="color:black" class="fas fa-angle-double-left"></i></span></a>
        <span>&nbsp;</span>
        if (Model.Paginacao.PaginaAtual > 1 && Model.Paginacao.PaginaAtual != 2)
        {
            <a title="Previous Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual > 1) ? Model.Paginacao.PaginaAtual-1 : Model.Paginacao.PaginaAtual })"><span class="icon-prev"><i style="color:black" class="fas fa-angle-left"></i></span></a>
            <span>&nbsp;</span> }
        else if (Model.Paginacao.PaginaAtual > 1 && Model.Paginacao.PaginaAtual == 2)
        {
            <a title="Previous Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual > 1) ? Model.Paginacao.PaginaAtual-1 : Model.Paginacao.PaginaAtual })"><span class="icon-prev"><i style="color:black" class="fas fa-angle-left"></i></span></a>
            <span>&nbsp;</span> }

        if (Model.Paginacao.PaginaAtual > 2)
        {
            @Html.ActionLink((Model.Paginacao.PaginaAtual - 1).ToString(), "Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual - 1) }, new { @style = "font-family: 'Varela Round';color:black;font-weight:bolder;" })
            <span>&nbsp;</span> }

        <span style="font-family: 'Varela Round';color:#167ce9;font-weight:bolder;">@Model.Paginacao.PaginaAtual.ToString()</span>
        <span>&nbsp;</span> if (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas - 1)
        {
            @Html.ActionLink((Model.Paginacao.PaginaAtual + 1).ToString(), "Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual + 1) }, new { @style = "font-family: 'Varela Round';color:black;font-weight:bolder;" })
            <span>&nbsp;</span> }

        if (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas && Model.Paginacao.PaginaAtual + 1 < Model.Paginacao.TotalPaginas)
        {
            <a title="Next Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas) ? Model.Paginacao.PaginaAtual + 1 : Model.Paginacao.PaginaAtual })"><span class="icon-next"><i style="color:black" class="fas fa-angle-right"></i></span></a>
            <span>&nbsp;&nbsp;</span>
            <span>&nbsp;&nbsp;</span> }
        else if (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas && Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas)
        {
            <a title="Next Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas) ? Model.Paginacao.PaginaAtual + 1 : Model.Paginacao.PaginaAtual })"><span class="icon-next"><i style="color:black" class="fas fa-angle-right"></i></span></a>
            <span>&nbsp;&nbsp;</span> }
        <a title="Last Page" href="@Url.Action("Index", "Eventos", new { @pagina = (Model.Paginacao.PaginaAtual < Model.Paginacao.TotalPaginas) ? Model.Paginacao.TotalPaginas : Model.Paginacao.PaginaAtual })"><span class="icon-next"><i style="color:black" class="fas fa-angle-double-right"></i></span></a>
    }
</div>